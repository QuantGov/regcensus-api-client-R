get_agencies(38)
library(curl)
usethis::use_testthat()
usethis::use_test()
usethis::use_test(null,open = interactive())
use_test()
usethis::use_test()
usethis::use_test("data_frames.R")
use_test()
devtools::test()
library(regcensusAPI)
examples(regcensusAPI)
examples("regcensusAPI")
example("regcensusAPI")
example("dplyr")
install_github("QuantGov/regcensus-api-client-R")
install.packages("githubinstall")
install_github("QuantGov/regcensus-api-client-R")
library(devtools)
install.packages("devtools")
install_github("QuantGov/regcensus-api-client-R")
library(devtools)
remove.packages(devtools)
remove.packages("devtools")
install.packages("devtools",dep=T)
library(devtools)
devtools::document()
get_values(jurisdiction = 38, series=9,time=c(1990,1991))
devtools::load_all(".")
get_values(jurisdiction = 38, series=9,time=c(1990,1991))
get_values(jurisdiction = 38, series=9,time=c(2017))
get_values(jurisdiction = 38, series=1,time=c(2017))
get_values(jurisdiction = 38, series=1,time=c(2017),industry = c('0'))
get_values(jurisdiction = 38, series=9,time=c(2017),industry = c('0'))
get_values(jurisdiction = 38, series=9,time=c(2017),industry = c('111'))
get_values(jurisdiction = 38, series=9,time=c(2017),industry = c('11'))
get_values(jurisdiction = 38, series=9,time=c(2017),industry = c('112'))
get_values(jurisdiction = 38, series=9,time=c(2017),industry = c('114'))
get_values(jurisdiction = 38, series=9,time=c(2017),industry = c('113'))
get_values(jurisdiction = 38, series=9,time=c(2017),industry = c('111'))
get_values(jurisdiction = 38, series=9,time=c(2017),industry = c('210'))
get_values(jurisdiction = 38, series=9,time=c(2010:2017),industry = c('111'))
get_values(jurisdiction = 33, series=9,time=c(2018),industry = c('325'))
library(tidyverse)
install.packages("tidyverse",dep=T)
install.packages("snakecase",dep=T)
install.packages("jsonlite",dep=T)
install.packages("curl",dep=T)
install.packages("pander",dep=T)
library(devtools)
library(devtools)
library(regcensusAPI)
get_agencies()
install.packages("curl")
get_agencies()
View(agencies)
View(agencies)
get_agencies()
install.packages("knitr")
library(regcensusAPI)
list_topics()
list_topics()
list_agencies()
list_series()
library(regcensusAPI)
list_document_types()
rm -Rf C:/Users/KOFIEW~1/AppData/Local/Temp/RtmpiIMrNg/Rd2pdf49442833366a
library(regcensusAPI)
get_country_series(jurisdiction = c(38), series = c(1,2), years= c(2010,2011), industries = c('111','521'))
get_country_values(jurisdiction = c(38), series = c(1,2), years= c(2010,2011), industries = c('111','521'))
get_country_values(jurisdiction = c(38), series = c(1,2), years= c(2010,2011), industries = c('111','521'))
install.packages("pdflatex")
isntall.packages("tinytex")
install.packages("tinytex")
tinytex::install_tinytex()
tinytex::install_tinytex()
tinytex::is_tinytex()
library(regcensusAPI)
l1 <- get_agencies()
View(l1)
jurs<- get_jurisdictions()
View(jurs)
get_values(jurisdiction = c(20,30,31),series=c(1,2,9),time=c(2015,2018))
get_values(jurisdiction = c(20,30,31),series=c(1,9),time=c(2015,2018))
get_values(jurisdiction = c(1),series=c(1,9),time=c(2015,2018))
list_jurisdictions()
get_values(jurisdiction = c(59,68,10,47,25,72),series=c(1,9),time=c(2015,2018))
get_values(jurisdiction = c(59,68,10,47,25,72),series=c(1,2,9),time=c(2015,2018))
get_values(jurisdiction = c(59,68,10,47,25,72),series=c(1,2,9),time=c(2010,2019))
get_values(jurisdiction = c(59,68,10,47,25,72,54),series=c(1,2,9),time=c(2015,2018))
get_values(jurisdiction = c(59,68,10,47,25,72,54),series=c(1,2,9),time=c(2015,2018))
get_values(jurisdiction = c(59,68,10,47,25,72,54,55),series=c(1,2,9),time=c(2015,2018))
get_values(jurisdiction = c(59,68,10,47,25,72,54,55),series=c(1,2,9),time=c(2015,2019))
get_jurisdictions(c(59,68,10,47,25,72,54,55))
library(devtools)
requre(devtools)
require(devtools)
install.packages("devtools")
library(devtools)
devtools::build_vignettes()
devtools::create_description()
usethis::use_description()
usethis::use_namespace()
install.packages("rcmdcheck")
library(regcensusAPI)
get_series_period(38)
get_series_period(38)
usethis::use_devtools()
library(regcensusAPI)
get_jurisdictions(c(59,68,10,47,25,72,54,55))
debugonce()
debugonce(get_jurisdictions)
get_jurisdictions(c(59,68,10,47,25,72,54,55))
get_jurisdictions()
debugonce(get_jurisdictions)
get_jurisdictions()
get_values(jurisdiction = c(59,68,10,47,25,72,54,55),series=c(1,2,9),time=c(2015,2019),industry = c('111','112'))
get_industries()
get_industries(10)
library(regcensusAPI)
get_industries(96)
codes<-get_industries(96)
get_values(jurisdiction = c(59,68,10,47,25,72,54,55),series=c(1,2,9),time=c(2015,2019),industry = codes$industryCode)
regional_snapshot<-get_values(jurisdiction = c(59,68,10,47,25,72,54,55),series=c(1,2,9),time=c(2015,2019),industry = codes$industryCode)
View(regional_snapshot)
getwd()
write.csv(regional_snapshot)
write.csv(regional_snapshot,"regional_snapshot.csv")
list_jurisdictions()
regional_snapshot<-get_values(jurisdiction = c(59,68,10,47,25,72,54,55),series=c(1,2,9),time=c(2015,2019),industry = codes$industryCode, filtered = TRUE)
View(regional_snapshot)
get_industries(96)
industries<-get_industries(10)
write.csv(industries, "industries.csv")
library(regcensusAPI)
industries<-get_industries(10)
View(industries)
regional_snapshot<-get_values(jurisdiction = c(59,68,10,47,25,72,54,55),series=c(1,2,9),time=c(2015,2019),industry = codes$industryCode, filtered = TRUE)
View(regional_snapshot)
devtools::document()
devtools::document()
install.packages(c("dplyr","jsonlite","snakecase","pander"))
library(regcensusAPI)
get_series(91,'series')
install.packages("curl")
get_industry_values(jurisdiction=38, industryType=c("2-Digit","3-Digit"),
+  series=c(1,9), date=c(2015,2019))
get_industry_values(jurisdiction=38, industryType=c("2-Digit","3-Digit"),  series=c(1,9), date=c(2015,2019))
devtools::document()
library(devtools)
install.packages("withr")
devtools::document()
library(regcensusAPI)
get_industry_values(jurisdiction=38, industryType=c("2-Digit","3-Digit"),  series=c(1,9), date=c(2015,2019))
devtools::document()
get_series(id=91, by = 'series')
library(regcensusAPI)
get_series(id=91, by = 'series')
library(regcensusAPI)
get_series(id=91, by = 'series')
library(regcensusAPI)
get_series(id=91, by = 'series')
warnings()
devtools::document()
?
.
get_series_period()
?.
devtools::document()
get_values(jurisdiction = c(84,38), series=c(1,9,92),time = c('2018-01-10','2020-01-31'), dateIsRange=TRUE)
devtools::document()
get_values(jurisdiction = c(84,38), series=c(1,9,92),time = c('2018-01-10','2020-01-31'), dateIsRange=TRUE)
devtools::document()
get_country_values(jurisdiction = c(38), series = c(1,2), years= c(2010,2011))
get_country_values(jurisdiction = c(38), series = c(1,2), years= c(2010,2011), industries = c('111','521'))
get_documents(38,3)
devtools::document()
library(devtools)
list_series(1,by="topic")
list_series(1,by="topic")
list_seriesyear()
devtools::document()
library(jsonlite)
library(rvest)
library(pbapply)
library(data.table)
json_cities <- paste0('http://h1bdata.info/cities.php?term=', letters)
all_cities <-unlist(pbapply(as.data.frame(json_cities), FUN = fromJSON))
install.packages("pbapply")
list_series(c(244, 216, 206, 189), by="agencies")
devtools::document()
install.packages("urltools")
install.packages("urltools")
devtools::document()
devtools::document()
devtools::document()
get_jurisdictions()
get_jurisdictions()
devtools::document()
devtools::document()
get_jurisdictions()
devtools::document()
help(pbOptions)
help("pboptions")
help(stringr)
devtools::document()
devtools::use_vignette("regcensusAPI")
install.packages("knitr")
devtools::document()
devtools::use_vignette("regcensusAPI")
devtools::use_vignette("regcensusAPI")
install.packages(rmarkdown)
install.packages("rmarkdown")
devtools::use_vignette("regcensusAPI")
devtools::load_all(".")
packrat::set_opts(vcs.ignore.src = TRUE)
devtools::install()
get_jurisdictions()
library(regcensusAPI)
get_jurisdictions()
list_series()
list_seriesyear(38)
list_seriesyear(38)
devtools::install()
list_seriesyear(38)
list_seriesyear()
devtools::load_all(recompile = TRUE)
install.packages("testthat")
devtools::load_all(recompile = TRUE)
devtools::load_all(recompile = TRUE)
devtools::document()
list_seriesyear()
devtools::install()
list_seriesyear()
list_seriesyear(1)
install.packages("devtools")
library(regcensusAPI)
list_seriesyear()
list_seriesyear(22)
list_document_types()
devtools::document()
library(regcensusAPI)
library(regcensusAPI)
get_series()
library(regcensusAPI)
get_series()
get_series(9)
get_series(9)
get_series(9)
get_series()
get_series(9)
get_series(91)
get_series(92)
get_series(2)
get_series(2)
get_series(2)
get_series(3)
get_series(c(3,1,2))
get_series(1,"jurisdiction")
get_series(1,"jurisdictions")
get_series(10,"jurisdictions")
get_series(38,"jurisdictions")
get_series(38,"jurisdictions")
get_series(84,"jurisdictions")
get_series(84,"jurisdictions")
#Define list of states
se_list = c("Alabama","Mississippi","Tennessee","South Carolina","Florida","Georgia","Kentucky","Louisiana")
#Pull total restrictions and word counts for these states
se_restrictions <- get_values(jurisdiction = se_list ,
series=c(1,2),
time = c(2015,2019))
library(regcensusAPI)
#Pull total restrictions and word counts for these states
se_restrictions <- get_values(jurisdiction = se_list ,
series=c(1,2),
time = c(2015,2019))
library(regcensusAPI)
#Pull total restrictions and word counts for these states
se_restrictions <- get_values(jurisdiction = se_list ,
series=c(1,2),
time = c(2015,2019))
#pull the 3-digit industry data for these states
se_industry <- get_industry_values(jurisdiction = se_list,
series = 9,
document_type = "3-Digit",
time = c(2015,2019),
date_is_range = TRUE)
#pull the 3-digit industry data for these states
se_industry <- get_industry_values(jurisdiction = se_list,
series = 9,
document_type = "3-Digit",
time = c(2015,2019),
date_is_range = TRUE)
#pull the 3-digit industry data for these states
se_industry <- get_industry_values(jurisdiction = se_list,
series = 9,
document_type = 3,
time = c(2015,2019),
date_is_range = TRUE)
library(regcensusAPI)
#pull the 3-digit industry data for these states
se_industry <- get_industry_values(jurisdiction = se_list,
series = 9,
document_type = 3,
time = c(2015,2019),
date_is_range = TRUE)
industry_types = c("all","2-Digit","3-digit","4-Digit","5-Digit","6-Digit")
industry_types
industry_type
industry_type=c("all","3-Digit")
stringr::str_which(industry_types, industry_type)
if(stringr::str_which(industry_types, industry_type))
)
if(stringr::str_which(industry_types, industry_type))
)
if (stringr::str_which(industry_types, industry_type) > 0)
)
if (stringr::str_which(industry_types, industry_type) > 0){}
if (stringr::str_which(industry_types, industry_type) > 0){print("yup!")}
library(regcensusAPI)
#pull the 3-digit industry data for these states
se_industry <- get_industry_values(jurisdiction = se_list,
series = 9,
document_type = 3,
time = c(2015,2019),
date_is_range = TRUE)
library(regcensusAPI)
#pull the 3-digit industry data for these states
se_industry <- get_industry_values(jurisdiction = se_list,
series = 9,
document_type = 3,
time = c(2015,2019),
date_is_range = TRUE)
debugonce(get_industry_values)
#pull the 3-digit industry data for these states
se_industry <- get_industry_values(jurisdiction = se_list,
series = 9,
document_type = 3,
time = c(2015,2019),
date_is_range = TRUE)
get_document_types()
get_document_types(38)
get_document_types(38)
get_document_types(38)
get_document_types(38)
get_document_types(38)
library(regcensusAPI)
get_document_types()
get_document_types(38)
get_document_types(38)
library(regcensusAPI)
get_document_types(38)
library(regcensusAPI)
get_document_types(38)
library(regcensusAPI)
get_document_types(38)
library(regcensusAPI)
get_document_types(38)
get_document_types()
get_document_types(NULL)
library(regcensusAPI)
get_document_types(NULL)
get_document_types()
get_document_types(21)
get_document_types(22)
get_document_types(2)
get_document_types(96)
get_document_types()
get_document_types(jurisdiction = NA)
library(regcensusAPI)
get_document_types(jurisdiction = NA)
get_document_types()
get_document_types()
get_document_types(2)
get_document_types()
#pull the 3-digit industry data for these states
se_industry <- get_industry_values(jurisdiction = se_list,
series = 9,
document_type = 3,
time = c(2015,2019),
date_is_range = TRUE)
debugonce(get_industry_values)
#pull the 3-digit industry data for these states
se_industry <- get_industry_values(jurisdiction = se_list,
series = 9,
document_type = 3,
time = c(2015,2019),
date_is_range = TRUE)
dt<-get_document_types()
dt[1]
stringr::str_which(dt[1], document_type)
stringr::str_which(dt[1], 3)
stringr::str_which(dt[1], "3")
stringr::str_which(dt[1], "3")
stringr::str_which(dt[1], as.list(3))
stringr::str_which(dt[1], c("3"))
stringr::str_which(as.list(dt[1]), c("3"))
stringr::str_which((dt[1], c("3"))
stringr::str_which(dt[1], c("3"))
stringr::str_which(dt[1,], c("3"))
stringr::str_which(dt[1,], 3)
stringr::str_which(dt[1,], "3")
library(regcensusAPI)
#pull the 3-digit industry data for these states
se_industry <- get_industry_values(jurisdiction = se_list,
series = 9,
document_type = 3,
time = c(2015,2019),
date_is_range = TRUE)
library(regcensusAPI)
#pull the 3-digit industry data for these states
se_industry <- get_industry_values(jurisdiction = se_list,
series = 9,
document_type = 3,
time = c(2015,2019),
date_is_range = TRUE)
library(regcensusAPI)
#pull the 3-digit industry data for these states
se_industry <- get_industry_values(jurisdiction = se_list,
series = 9,
document_type = 3,
time = c(2015,2019),
date_is_range = TRUE)
#Define list of states
se_list = c("Alabama","Mississippi","Tennessee","South Carolina","Florida","Georgia","Kentucky","Louisiana")
#Pull total restrictions and word counts for these states
se_restrictions <- get_values(jurisdiction = se_list ,
series=c(1,2),
time = c(2015,2019))
#pull the 3-digit industry data for these states
se_industry <- get_industry_values(jurisdiction = se_list,
series = 9,
document_type = 3,
time = c(2015,2019),
date_is_range = TRUE)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
length(dt)
nrow(dt)
devtools::document()
devtools::document()
devtools::document()
help(pbapply)
library(regcensusAPI)
devtools::document()
get_country_values(jurisdiction = c(38), series = c(1,2),  industries =c('111','521'))
devtools::document()
devtools::document()
devtools::document()
get_industry_values(jurisdiction=c("Maryland","Canada"), industryType=c("2-Digit","3-Digit"), series=c(1,9), time=(2015,2019))
get_industry_values(jurisdiction=c("Maryland","Canada"), industryType=c("2-Digit","3-Digit"), series=c(1,9), time=c(2015,2019))
get_industry_values(jurisdiction=c("Maryland","Canada"), industry_type=c("2-Digit","3-Digit"), series=c(1,9), time=c(2015,2019))
get_industry_values(jurisdiction=c("Maryland","Canada"), industry_type=c("2-Digit","3-Digit"), series=c(1,9), time=c(2015,2019))
get_industry_values(jurisdiction=c("Maryland","Canada"), industry_type=c("2-Digit","3-Digit"), series=c(1,9), time=c(2015,2019))
devtools::document()
get_industry_values(jurisdiction=c("Maryland","Canada"), industry_type=c("2-Digit","3-Digit"), series=c(1,9), time=c(2015,2019))
get_agencies()
get_agencies()
devtools::document()
library(regcensusAPI)
get_agencies()
get_jurisdictions()
get_agencies()
get_series_period()
View(get_series_period())
View(get_agencies())
View(get_agencies(38))
devtools::document()
View(get_agencies(38))
library(regcensusAPI)
View(get_agencies(38))
View(get_agencies())
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::build()
get_jurisdictions()
View(get_jurisdictions())
t1<-get_agencies()
View(t1)
devtools::document()
devtools::build_manual()
devtools::build_site()
list_series()
library(regcensusAPI)
list_series()
get_series_period()
get_series_period()
get_series_period(38)#> Error in open.connection(con, "rb"): HTTP error 500.
get_jurisdictions()
devtools::build_site()
devtools::build_site()
list_topics()
library(regcensusAPI)
list_topics()
get_topics()
get_topics()
library(regcensusAPI)
get_topics()
devtools::document()
devtools::build_site()
get_topics()
get_industries()
get_industries()
get_industry_values(industry_type = "3-Digit",series=9)
t1<-get_industry_values(industry_type = "3-Digit",series=9)
View(t1)
